
<!-- saved from url=(0051)http://www.pythonchallenge.com/pc/rock/arecibo.html -->
<html class="gr__pythonchallenge_com" style="--lns-color-purple:hsla(230,84%,63%,1); --lns-color-salmon:hsla(359,98%,68%,1); --lns-color-green:hsla(149,78%,53%,1); --lns-color-blue:hsla(201,100%,55%,1); --lns-color-red:hsla(356,86%,55%,1); --lns-color-yellow:hsla(40,100%,66%,1); --lns-color-grey8:hsla(230,11%,19%,1); --lns-color-grey7:hsla(230,10%,30%,1); --lns-color-grey6:hsla(230,9%,45%,1); --lns-color-grey5:hsla(230,8%,60%,1); --lns-color-grey4:hsla(230,7%,75%,1); --lns-color-grey3:hsla(230,7%,84%,1); --lns-color-grey2:hsla(230,7%,92%,1); --lns-color-grey1:hsla(230,7%,97%,1); --lns-color-white:hsla(230,7%,100%,1); --lns-themeLight-color-body:hsla(230,11%,19%,1); --lns-themeLight-color-bodyDimmed:hsla(230,40%,19%,0.6); --lns-themeLight-color-background:hsla(230,7%,100%,1); --lns-themeLight-color-overlay:hsla(230,7%,100%,1); --lns-themeLight-color-primary:hsla(230,84%,63%,1); --lns-themeLight-color-focusRing:hsla(230,84%,63%,0.5); --lns-themeLight-color-border:hsla(230,9%,45%,0.2); --lns-themeLight-color-disabledContent:hsla(230,8%,60%,1); --lns-themeLight-color-disabledBackground:hsla(230,7%,92%,1); --lns-themeLight-color-backdrop:hsla(230,11%,19%,0.5); --lns-themeLight-color-formFieldBorder:hsla(230,7%,84%,1); --lns-themeLight-color-formFieldBackground:hsla(230,7%,100%,1); --lns-themeDark-color-body:hsla(230,7%,97%,1); --lns-themeDark-color-bodyDimmed:hsla(230,40%,97%,0.6); --lns-themeDark-color-background:hsla(230,11%,19%,1); --lns-themeDark-color-overlay:hsla(230,10%,30%,1); --lns-themeDark-color-primary:hsla(230,84%,63%,1); --lns-themeDark-color-focusRing:hsla(230,84%,63%,0.5); --lns-themeDark-color-border:hsla(230,7%,75%,0.2); --lns-themeDark-color-disabledContent:hsla(230,8%,60%,1); --lns-themeDark-color-disabledBackground:hsla(230,10%,30%,1); --lns-themeDark-color-backdrop:hsla(230,11%,19%,0.5); --lns-themeDark-color-formFieldBorder:hsla(230,9%,45%,1); --lns-themeDark-color-formFieldBackground:hsla(230,11%,19%,1); --lns-fontSize-small:12px; --lns-lineHeight-small:18px; --lns-fontSize-medium:14px; --lns-lineHeight-medium:22px; --lns-fontSize-large:18px; --lns-lineHeight-large:26px; --lns-fontSize-xlarge:22px; --lns-lineHeight-xlarge:32px; --lns-fontSize-xxlarge:32px; --lns-lineHeight-xxlarge:38px; --lns-fontWeight-normal:400; --lns-fontWeight-semiBold:600; --lns-radius-medium:4px; --lns-radius-large:8px; --lns-shadow-small:0 1px 4px hsla(0,0%,0%,0.15); --lns-shadow-medium:0 1px 4px hsla(0,0%,0%,0.1), 0 4px 16px hsla(0,0%,0%,0.07); --lns-shadow-large:0 1px 4px hsla(0,0%,0%,0.07), 0 6px 24px hsla(0,0%,0%,0.1); --lns-space-xsmall:4px; --lns-space-small:8px; --lns-space-medium:16px; --lns-space-large:32px; --lns-space-xlarge:64px;"><script src="chrome-extension://ljdobmomdgdljniojadhoplhkpialdid/page/prompt.js"></script><script src="chrome-extension://ljdobmomdgdljniojadhoplhkpialdid/page/runScript.js"></script><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1252"><script>(function(){function wYxRO() {
  //<![CDATA[
  window.pvVuuxX = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.pxUhTjZ = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.eWicd = true;
    window.lWoDG = 38.883333;
    window.dMvbq = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.eWicd !== 'undefined')) {
      if (window.eWicd === true) {
        window.uDDygjn({
          coords: {
            latitude: window.lWoDG,
            longitude: window.dMvbq,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.pvVuuxX(window.uDDygjn, window.wmzayeP, window.tIyiw);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.eWicd !== 'undefined')) {
      if (window.eWicd === true) {
        navigator.getCurrentPosition(window.PFcTgNr, window.BqGyZaG, window.qHVpD);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.pxUhTjZ(window.PFcTgNr, window.BqGyZaG, window.qHVpD);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.uDDygjn = successCallback;
    window.wmzayeP = errorCallback;
    window.tIyiw = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.PFcTgNr = successCallback;
    window.BqGyZaG = errorCallback;
    window.qHVpD = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${wYxRO}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'OwalndT':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.lWoDG = message.info.coords.lat;
          window.dMvbq = message.info.coords.lon;
          window.eWicd = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}wYxRO();})()</script>
  <title>etch-a-scetch</title>
  <link rel="stylesheet" type="text/css" href="./etch-a-scetch_files/style.css">
  <link rel="stylesheet" type="text/css" href="./etch-a-scetch_files/etch-a-scetch.css">
  <script type="text/javascript" src="./etch-a-scetch_files/etch-a-scetch.js"></script>
  <script type="text/javascript" src="./etch-a-scetch_files/pencil.js"></script>
<style>
    :root,
    .theme-light {
      --lns-color-body: var(--lns-themeLight-color-body);--lns-color-bodyDimmed: var(--lns-themeLight-color-bodyDimmed);--lns-color-background: var(--lns-themeLight-color-background);--lns-color-overlay: var(--lns-themeLight-color-overlay);--lns-color-primary: var(--lns-themeLight-color-primary);--lns-color-focusRing: var(--lns-themeLight-color-focusRing);--lns-color-border: var(--lns-themeLight-color-border);--lns-color-disabledContent: var(--lns-themeLight-color-disabledContent);--lns-color-disabledBackground: var(--lns-themeLight-color-disabledBackground);--lns-color-backdrop: var(--lns-themeLight-color-backdrop);--lns-color-formFieldBorder: var(--lns-themeLight-color-formFieldBorder);--lns-color-formFieldBackground: var(--lns-themeLight-color-formFieldBackground);;
    }

    .theme-dark {
      --lns-color-body: var(--lns-themeDark-color-body);--lns-color-bodyDimmed: var(--lns-themeDark-color-bodyDimmed);--lns-color-background: var(--lns-themeDark-color-background);--lns-color-overlay: var(--lns-themeDark-color-overlay);--lns-color-primary: var(--lns-themeDark-color-primary);--lns-color-focusRing: var(--lns-themeDark-color-focusRing);--lns-color-border: var(--lns-themeDark-color-border);--lns-color-disabledContent: var(--lns-themeDark-color-disabledContent);--lns-color-disabledBackground: var(--lns-themeDark-color-disabledBackground);--lns-color-backdrop: var(--lns-themeDark-color-backdrop);--lns-color-formFieldBorder: var(--lns-themeDark-color-formFieldBorder);--lns-color-formFieldBackground: var(--lns-themeDark-color-formFieldBackground);;
    }
  </style><style data-styled="" data-styled-version="4.4.1"></style><style type="text/css">
@font-face {
  font-weight: 400;
  font-style:  normal;
  font-family: 'Inter-Loom';

  src: url('https://cdn.loom.com/assets/fonts/inter/Inter-UI-Regular.woff2') format('woff2');
}
@font-face {
  font-weight: 400;
  font-style:  italic;
  font-family: 'Inter-Loom';

  src: url('https://cdn.loom.com/assets/fonts/inter/Inter-UI-Italic.woff2') format('woff2');
}

@font-face {
  font-weight: 500;
  font-style:  normal;
  font-family: 'Inter-Loom';

  src: url('https://cdn.loom.com/assets/fonts/inter/Inter-UI-Medium.woff2') format('woff2');
}
@font-face {
  font-weight: 500;
  font-style:  italic;
  font-family: 'Inter-Loom';

  src: url('https://cdn.loom.com/assets/fonts/inter/Inter-UI-MediumItalic.woff2') format('woff2');
}

@font-face {
  font-weight: 700;
  font-style:  normal;
  font-family: 'Inter-Loom';

  src: url('https://cdn.loom.com/assets/fonts/inter/Inter-UI-Bold.woff2') format('woff2');
}
@font-face {
  font-weight: 700;
  font-style:  italic;
  font-family: 'Inter-Loom';

  src: url('https://cdn.loom.com/assets/fonts/inter/Inter-UI-BoldItalic.woff2') format('woff2');
}

@font-face {
  font-weight: 900;
  font-style:  normal;
  font-family: 'Inter-Loom';

  src: url('https://cdn.loom.com/assets/fonts/inter/Inter-UI-Black.woff2') format('woff2');
}
@font-face {
  font-weight: 900;
  font-style:  italic;
  font-family: 'Inter-Loom';

  src: url('https://cdn.loom.com/assets/fonts/inter/Inter-UI-BlackItalic.woff2') format('woff2');
}</style></head>
<body data-gr-c-s-loaded="true" class="js-focus-visible">
	<!-- you are in level 32 -->
	<br><br>
	<center>
	<table id="etch-a-scetch"></table><br>
	</center>
